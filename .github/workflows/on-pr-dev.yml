on: 
 push: 
   branches:
      - dev
 pull_request:
    types:
    - closed
    branches:
      - feature
      - dev
      #- '!qa'
jobs:
 pre-push_hook:

    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install Talisman
      run: |
          wget https://github.com/thoughtworks/talisman/releases/latest/download/talisman_linux_amd64 -O talisman
          chmod +x talisman
          sudo mv talisman /usr/local/bin/

    - name: Run Talisman Checks
      run: talisman --scan 
      continue-on-error: true

    - name: Upload Report
      uses: actions/upload-artifact@v3
      with:
          name: talisman-scan-report
          path: talisman_report/talisman_reports/data
 Build_and_test:
    needs: pre-push_hook
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        #cache: maven
    
        
    - name: Build Maven
      run: mvn -B package --file pom.xml
      
    #- name: Sonarcloud-code coverage
     # env:
         # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=poc-maven_maven

    - name: Unit Test
      run: mvn --batch-mode -Dmaven.test.failure.ignore=false test
      
    - name: Build Test Maven
      run: mvn -B package --file pom.xml -DskipTests
    
      
    - name: Upload to Artifact  
      run: mkdir staging && cp target/*jar-with-dependencies.jar staging
    - uses: actions/upload-artifact@v3
      with:
            name: Package
            path: staging
    #- name: Nexus Repo Publish
     # uses: sonatype-nexus-community/nexus-repo-github-action@master
      #with:
       # serverUrl: https://annually-quality-seagull.ngrok-free.app
        #username: admin
        #password: ${{ secrets.password }}
        #format: maven2
        #repository: maven-GH
        #coordinates: groupId=com.example artifactId=app version=1.0.0
        #assets: extension=jar
        #filename: target/*jar-with-dependencies.jar

    
   
    - name: Generate SBOM
      run: mvn org.cyclonedx:cyclonedx-maven-plugin:makeAggregateBom 
        
     
    - name: Upload SBOM report to artifact
      uses: actions/upload-artifact@v3
      with:
          name: sbom
          path: target/bom.xml
 

 Docker_push:
    needs: Build_and_test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
    - name: Build Container image
      run: docker build -t ${{ secrets.DOCKER_REPO }}:latest .
    - name: Publish Docker image
      run: docker push ${{ secrets.DOCKER_REPO }}

     
